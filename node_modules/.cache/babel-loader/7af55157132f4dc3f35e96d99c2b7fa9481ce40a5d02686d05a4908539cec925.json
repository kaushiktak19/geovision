{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\population-density-map\\\\src\\\\components\\\\MapComponent.tsx\",\n  _s = $RefreshSig$();\n// // src/components/Map.tsx\n// import React, { useEffect, useRef } from 'react';\n// import 'ol/ol.css';\n// import { Map, View } from 'ol';\n// import TileLayer from 'ol/layer/Tile';\n// import XYZ from 'ol/source/XYZ';\n// import { fromLonLat } from 'ol/proj';\n\n// const MapComponent: React.FC = () => {\n//     const mapElement = useRef<HTMLDivElement | null>(null);\n\n//     useEffect(() => {\n//         const map = new Map({\n//             target: mapElement.current!,\n//             layers: [\n//                 new TileLayer({\n//                     source: new XYZ({\n//                         url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n//                     }),\n//                 }),\n//             ],\n//             view: new View({\n//                 center: fromLonLat([-95.7129, 37.0902]), // Centered on the USA\n//                 zoom: 4,\n//             }),\n//         });\n\n//         return () => map.setTarget(undefined);\n//     }, []);\n\n//     return <div ref={mapElement} style={{ width: '100%', height: '100vh' }} />;\n// };\n\n// export default MapComponent;\nimport React, { useEffect, useRef } from 'react';\nimport 'ol/ol.css';\nimport { Map, View } from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ';\nimport { fromLonLat } from 'ol/proj';\nimport VectorLayer from 'ol/layer/Vector';\nimport VectorSource from 'ol/source/Vector';\nimport { Style, Fill, Stroke } from 'ol/style';\nimport { GeoJSON } from 'ol/format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const mapElement = useRef(null);\n  useEffect(() => {\n    const vectorSource = new VectorSource({\n      url: 'https://openlayers.org/data/vector/us-states.json',\n      format: new GeoJSON()\n    });\n    const vectorLayer = new VectorLayer({\n      source: vectorSource,\n      style: new Style({\n        fill: new Fill({\n          color: 'rgba(0, 0, 255, 0.1)'\n        }),\n        stroke: new Stroke({\n          color: '#319FD3',\n          width: 1\n        })\n      })\n    });\n    const map = new Map({\n      target: mapElement.current,\n      layers: [new TileLayer({\n        source: new XYZ({\n          url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n        })\n      }), vectorLayer],\n      view: new View({\n        center: fromLonLat([-95.7129, 37.0902]),\n        // Centered on the USA\n        zoom: 4\n      })\n    });\n    return () => map.setTarget(undefined);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapElement,\n    style: {\n      width: '100%',\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 12\n  }, this);\n};\n_s(MapComponent, \"GU7I4N/VGrt6FEpW0knbDew4aDQ=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","Map","View","TileLayer","XYZ","fromLonLat","VectorLayer","VectorSource","Style","Fill","Stroke","GeoJSON","jsxDEV","_jsxDEV","MapComponent","_s","mapElement","vectorSource","url","format","vectorLayer","source","style","fill","color","stroke","width","map","target","current","layers","view","center","zoom","setTarget","undefined","ref","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/population-density-map/src/components/MapComponent.tsx"],"sourcesContent":["// // src/components/Map.tsx\r\n// import React, { useEffect, useRef } from 'react';\r\n// import 'ol/ol.css';\r\n// import { Map, View } from 'ol';\r\n// import TileLayer from 'ol/layer/Tile';\r\n// import XYZ from 'ol/source/XYZ';\r\n// import { fromLonLat } from 'ol/proj';\r\n\r\n// const MapComponent: React.FC = () => {\r\n//     const mapElement = useRef<HTMLDivElement | null>(null);\r\n\r\n//     useEffect(() => {\r\n//         const map = new Map({\r\n//             target: mapElement.current!,\r\n//             layers: [\r\n//                 new TileLayer({\r\n//                     source: new XYZ({\r\n//                         url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n//                     }),\r\n//                 }),\r\n//             ],\r\n//             view: new View({\r\n//                 center: fromLonLat([-95.7129, 37.0902]), // Centered on the USA\r\n//                 zoom: 4,\r\n//             }),\r\n//         });\r\n\r\n//         return () => map.setTarget(undefined);\r\n//     }, []);\r\n\r\n//     return <div ref={mapElement} style={{ width: '100%', height: '100vh' }} />;\r\n// };\r\n\r\n// export default MapComponent;\r\nimport React, { useEffect, useRef } from 'react';\r\nimport 'ol/ol.css';\r\nimport { Map, View } from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport { Style, Fill, Stroke } from 'ol/style';\r\nimport { GeoJSON } from 'ol/format';\r\n\r\nconst MapComponent: React.FC = () => {\r\n    const mapElement = useRef<HTMLDivElement | null>(null);\r\n\r\n    useEffect(() => {\r\n        const vectorSource = new VectorSource({\r\n            url: 'https://openlayers.org/data/vector/us-states.json',\r\n            format: new GeoJSON(),\r\n        });\r\n\r\n        const vectorLayer = new VectorLayer({\r\n            source: vectorSource,\r\n            style: new Style({\r\n                fill: new Fill({\r\n                    color: 'rgba(0, 0, 255, 0.1)',\r\n                }),\r\n                stroke: new Stroke({\r\n                    color: '#319FD3',\r\n                    width: 1,\r\n                }),\r\n            }),\r\n        });\r\n\r\n        const map = new Map({\r\n            target: mapElement.current!,\r\n            layers: [\r\n                new TileLayer({\r\n                    source: new XYZ({\r\n                        url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n                    }),\r\n                }),\r\n                vectorLayer,\r\n            ],\r\n            view: new View({\r\n                center: fromLonLat([-95.7129, 37.0902]), // Centered on the USA\r\n                zoom: 4,\r\n            }),\r\n        });\r\n\r\n        return () => map.setTarget(undefined);\r\n    }, []);\r\n\r\n    return <div ref={mapElement} style={{ width: '100%', height: '100vh' }} />;\r\n};\r\n\r\nexport default MapComponent;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,WAAW;AAClB,SAASC,GAAG,EAAEC,IAAI,QAAQ,IAAI;AAC9B,OAAOC,SAAS,MAAM,eAAe;AACrC,OAAOC,GAAG,MAAM,eAAe;AAC/B,SAASC,UAAU,QAAQ,SAAS;AACpC,OAAOC,WAAW,MAAM,iBAAiB;AACzC,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,SAASC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,UAAU;AAC9C,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,UAAU,GAAGhB,MAAM,CAAwB,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACZ,MAAMkB,YAAY,GAAG,IAAIV,YAAY,CAAC;MAClCW,GAAG,EAAE,mDAAmD;MACxDC,MAAM,EAAE,IAAIR,OAAO,CAAC;IACxB,CAAC,CAAC;IAEF,MAAMS,WAAW,GAAG,IAAId,WAAW,CAAC;MAChCe,MAAM,EAAEJ,YAAY;MACpBK,KAAK,EAAE,IAAId,KAAK,CAAC;QACbe,IAAI,EAAE,IAAId,IAAI,CAAC;UACXe,KAAK,EAAE;QACX,CAAC,CAAC;QACFC,MAAM,EAAE,IAAIf,MAAM,CAAC;UACfc,KAAK,EAAE,SAAS;UAChBE,KAAK,EAAE;QACX,CAAC;MACL,CAAC;IACL,CAAC,CAAC;IAEF,MAAMC,GAAG,GAAG,IAAI1B,GAAG,CAAC;MAChB2B,MAAM,EAAEZ,UAAU,CAACa,OAAQ;MAC3BC,MAAM,EAAE,CACJ,IAAI3B,SAAS,CAAC;QACVkB,MAAM,EAAE,IAAIjB,GAAG,CAAC;UACZc,GAAG,EAAE;QACT,CAAC;MACL,CAAC,CAAC,EACFE,WAAW,CACd;MACDW,IAAI,EAAE,IAAI7B,IAAI,CAAC;QACX8B,MAAM,EAAE3B,UAAU,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAAE;QACzC4B,IAAI,EAAE;MACV,CAAC;IACL,CAAC,CAAC;IAEF,OAAO,MAAMN,GAAG,CAACO,SAAS,CAACC,SAAS,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOtB,OAAA;IAAKuB,GAAG,EAAEpB,UAAW;IAACM,KAAK,EAAE;MAAEI,KAAK,EAAE,MAAM;MAAEW,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9E,CAAC;AAAC1B,EAAA,CA1CID,YAAsB;AAAA4B,EAAA,GAAtB5B,YAAsB;AA4C5B,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}