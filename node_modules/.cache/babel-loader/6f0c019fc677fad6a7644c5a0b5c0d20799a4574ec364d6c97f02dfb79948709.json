{"ast":null,"code":"/**\n * @module ol/format/XML\n */\nimport { abstract } from '../util.js';\nimport { isDocument, parse } from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument( /** @type {Document} */source);\n    }\n    return this.readFromNode( /** @type {Element} */source);\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode( /** @type {Element} */n);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\nexport default XML;","map":{"version":3,"names":["abstract","isDocument","parse","XML","read","source","doc","readFromDocument","readFromNode","n","firstChild","nextSibling","nodeType","Node","ELEMENT_NODE","node"],"sources":["C:/Users/Asus/Desktop/population-density-map/node_modules/ol/format/XML.js"],"sourcesContent":["/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,QAAQ,QAAO,YAAY;AACnC,SAAQC,UAAU,EAAEC,KAAK,QAAO,WAAW;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,GAAG,CAAC;EACR;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,IAAIA,CAACC,MAAM,EAAE;IACX,IAAI,CAACA,MAAM,EAAE;MACX,OAAO,IAAI;IACb;IACA,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;MAC9B,MAAMC,GAAG,GAAGJ,KAAK,CAACG,MAAM,CAAC;MACzB,OAAO,IAAI,CAACE,gBAAgB,CAACD,GAAG,CAAC;IACnC;IACA,IAAIL,UAAU,CAACI,MAAM,CAAC,EAAE;MACtB,OAAO,IAAI,CAACE,gBAAgB,EAAC,uBAAyBF,MAAO,CAAC;IAChE;IACA,OAAO,IAAI,CAACG,YAAY,EAAC,sBAAwBH,MAAO,CAAC;EAC3D;;EAEA;AACF;AACA;AACA;EACEE,gBAAgBA,CAACD,GAAG,EAAE;IACpB,KAAK,IAAIG,CAAC,GAAGH,GAAG,CAACI,UAAU,EAAED,CAAC,EAAEA,CAAC,GAAGA,CAAC,CAACE,WAAW,EAAE;MACjD,IAAIF,CAAC,CAACG,QAAQ,IAAIC,IAAI,CAACC,YAAY,EAAE;QACnC,OAAO,IAAI,CAACN,YAAY,EAAC,sBAAwBC,CAAE,CAAC;MACtD;IACF;IACA,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;EACED,YAAYA,CAACO,IAAI,EAAE;IACjBf,QAAQ,CAAC,CAAC;EACZ;AACF;AAEA,eAAeG,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}