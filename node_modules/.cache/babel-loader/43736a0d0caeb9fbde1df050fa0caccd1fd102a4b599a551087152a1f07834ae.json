{"ast":null,"code":"/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport { makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\nimport { readHref } from './xlink.js';\nimport { readString } from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n});\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact)\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({\n    'name': name\n  }, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({\n    'href': href\n  }, REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */objectStack[objectStack.length - 1];\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\nexport default OWS;","map":{"version":3,"names":["XML","makeObjectPropertyPusher","makeObjectPropertySetter","makeStructureNS","pushParseAndPop","readHref","readString","NAMESPACE_URIS","PARSERS","readServiceIdentification","readServiceProvider","readOperationsMetadata","OWS","constructor","readFromNode","node","owsObject","ADDRESS_PARSERS","ALLOWED_VALUES_PARSERS","readValue","CONSTRAINT_PARSERS","readAllowedValues","CONTACT_INFO_PARSERS","readPhone","readAddress","DCP_PARSERS","readHttp","HTTP_PARSERS","readGet","undefined","OPERATION_PARSERS","readDcp","OPERATIONS_METADATA_PARSERS","readOperation","PHONE_PARSERS","REQUEST_METHOD_PARSERS","readConstraint","SERVICE_CONTACT_PARSERS","readContactInfo","SERVICE_IDENTIFICATION_PARSERS","SERVICE_PROVIDER_PARSERS","readServiceContact","objectStack","name","getAttribute","href","value","object","length"],"sources":["C:/Users/Asus/Desktop/population-density-map/node_modules/ol/format/OWS.js"],"sourcesContent":["/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}