{"ast":null,"code":"/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport { boundingExtent } from '../extent.js';\nimport { makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\nimport { readDecimal, readPositiveInteger, readString } from './xsd.js';\nimport { readHref } from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents)\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Style': makeObjectPropertyPusher(readStyle),\n  'Format': makeObjectPropertyPusher(readString),\n  'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n  'Dimension': makeObjectPropertyPusher(readDimensions),\n  'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'Abstract': makeObjectPropertySetter(readString),\n  'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Title': makeObjectPropertySetter(readString),\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Default': makeObjectPropertySetter(readString),\n  'Value': makeObjectPropertyPusher(readString)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates)\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'WellKnownScaleSet': makeObjectPropertySetter(readString),\n  'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'SupportedCRS': makeObjectPropertySetter(readString),\n  'Identifier': makeObjectPropertySetter(readString),\n  'BoundingBox': makeObjectPropertySetter(readBoundingBox)\n}));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n  'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n  'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n  'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n  'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n  'MatrixHeight': makeObjectPropertySetter(readPositiveInteger)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n  'Identifier': makeObjectPropertySetter(readString)\n}));\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {\n    extent: boundingExtent(coordinates),\n    crs: crs\n  };\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\nexport default WMTSCapabilities;","map":{"version":3,"names":["OWS","XML","boundingExtent","makeArrayPusher","makeObjectPropertyPusher","makeObjectPropertySetter","makeStructureNS","pushParseAndPop","readDecimal","readPositiveInteger","readString","readHref","NAMESPACE_URIS","OWS_NAMESPACE_URIS","PARSERS","readContents","WMTSCapabilities","constructor","owsParser_","readFromNode","node","version","getAttribute","trim","WMTSCapabilityObject","CONTENTS_PARSERS","readLayer","readTileMatrixSet","LAYER_PARSERS","readStyle","readTileMatrixSetLink","readDimensions","readResourceUrl","readBoundingBox","readBoundingBoxWithCrs","STYLE_PARSERS","readLegendUrl","TMS_LINKS_PARSERS","readTileMatrixLimitsList","TMS_LIMITS_LIST_PARSERS","readTileMatrixLimits","TMS_LIMITS_PARSERS","DIMENSION_PARSERS","WGS84_BBOX_READERS","readCoordinates","TMS_PARSERS","readTileMatrix","TM_PARSERS","objectStack","style","undefined","isDefault","format","template","resourceType","resource","coordinates","length","crs","extent","legend","split","x","y","isNaN"],"sources":["C:/Users/Asus/Desktop/population-density-map/node_modules/ol/format/WMTSCapabilities.js"],"sourcesContent":["/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\nimport {readHref} from './xlink.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      [],\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {extent: boundingExtent(coordinates), crs: crs};\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}