{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\population-density-map\\\\src\\\\components\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport '../styles/LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showCredentials, setShowCredentials] = useState(false);\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleLogin = () => {\n    if (username === 'demo' && password === 'password') {\n      navigate('/map'); // Navigate to '/map' on successful login\n    } else {\n      alert('Invalid username or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowCredentials(!showCredentials),\n      children: [showCredentials ? 'Hide' : 'Show', \" Demo Credentials\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), showCredentials && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"credentials\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Username: demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Password: password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"ngwjPsQCU34PCKCVohvdLGWr4ro=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","showCredentials","setShowCredentials","navigate","handleLogin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Asus/Desktop/population-density-map/src/components/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport '../styles/LoginPage.css';\r\n\r\nconst LoginPage: React.FC = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [showCredentials, setShowCredentials] = useState(false);\r\n    const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n    const handleLogin = () => {\r\n        if (username === 'demo' && password === 'password') {\r\n            navigate('/map'); // Navigate to '/map' on successful login\r\n        } else {\r\n            alert('Invalid username or password');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <h2>Login</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button onClick={handleLogin}>Login</button>\r\n            <button onClick={() => setShowCredentials(!showCredentials)}>\r\n                {showCredentials ? 'Hide' : 'Show'} Demo Credentials\r\n            </button>\r\n            {showCredentials && (\r\n                <div className=\"credentials\">\r\n                    <p>Username: demo</p>\r\n                    <p>Password: password</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIP,QAAQ,KAAK,MAAM,IAAIE,QAAQ,KAAK,UAAU,EAAE;MAChDI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACHE,KAAK,CAAC,8BAA8B,CAAC;IACzC;EACJ,CAAC;EAED,oBACIX,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdjB,OAAA;MACIkB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEjB,QAAS;MAChBkB,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFjB,OAAA;MACIkB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEf,QAAS;MAChBgB,QAAQ,EAAGC,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFjB,OAAA;MAAQwB,OAAO,EAAEd,WAAY;MAAAG,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5CjB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAMhB,kBAAkB,CAAC,CAACD,eAAe,CAAE;MAAAM,QAAA,GACvDN,eAAe,GAAG,MAAM,GAAG,MAAM,EAAC,mBACvC;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRV,eAAe,iBACZP,OAAA;MAAKY,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBb,OAAA;QAAAa,QAAA,EAAG;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACrBjB,OAAA;QAAAa,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACf,EAAA,CAzCID,SAAmB;EAAA,QAIJH,WAAW;AAAA;AAAA2B,EAAA,GAJ1BxB,SAAmB;AA2CzB,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}